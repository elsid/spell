on: [push, pull_request]

name: CI

jobs:
  build_server_linux:
    name: Build server for Linux
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true
      - uses: actions-rs/cargo@v1
        with:
          command: build
          args: --release --features=server --bins
      - run: mv target/release/spell_server .
      - uses: actions/upload-artifact@v2
        with:
          name: spell_server_linux
          path: spell_server

  build_client_linux:
    name: Build client for Linux
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true
      - run: sudo apt install -y libxrandr-dev libxi-dev libasound2-dev libgl1-mesa-dev
      - uses: actions-rs/cargo@v1
        with:
          command: build
          args: --release --features=client --bins
      - run: mv target/release/spell .
      - uses: actions/upload-artifact@v2
        with:
          name: spell_client_linux
          path: |
            spell
            fonts/

  build_client_macos_10_15:
    name: Build client for macOS 10.15
    runs-on: macos-10.15
    steps:
      - uses: actions/checkout@v2
      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true
      - uses: actions-rs/cargo@v1
        with:
          command: build
          args: --release --features=client --bins
      - run: mv target/release/spell .
      - uses: actions/upload-artifact@v2
        with:
          name: spell_client_macos_10.15
          path: |
            spell
            fonts/

  build_client_windows:
    name: Build client for Windows
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true
      - uses: actions-rs/cargo@v1
        with:
          command: build
          args: --release --features=client --bins
      - run: mv target/release/spell.exe .
      - uses: actions/upload-artifact@v2
        with:
          name: spell_client_windows
          path: |
            spell.exe
            fonts/

  build_all:
    name: Build all
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true
      - run: sudo apt install -y libxrandr-dev libxi-dev libasound2-dev libgl1-mesa-dev
      - uses: actions-rs/cargo@v1
        with:
          command: build
          args: --all-features --all-targets

  test_all:
    name: Tests all
    runs-on: ubuntu-latest
    env:
      RUST_BACKTRACE: 1
      RUST_LOG: debug
    steps:
      - uses: actions/checkout@v2
      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true
      - run: sudo apt install -y libxrandr-dev libxi-dev libasound2-dev libgl1-mesa-dev
      - uses: actions-rs/cargo@v1
        with:
          command: test
          args: --all-features

  test_all_release:
    name: Tests all release
    runs-on: ubuntu-latest
    env:
      RUST_BACKTRACE: 1
      RUST_LOG: debug
    steps:
      - uses: actions/checkout@v2
      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true
      - run: sudo apt install -y libxrandr-dev libxi-dev libasound2-dev libgl1-mesa-dev
      - uses: actions-rs/cargo@v1
        with:
          command: test
          args: --all-features --release

  fmt:
    name: Format
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true
      - run: rustup component add rustfmt
      - uses: actions-rs/cargo@v1
        with:
          command: fmt
          args: --all -- --check

  clippy_server:
    name: Clippy server
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true
      - run: rustup component add clippy
      - uses: actions-rs/cargo@v1
        with:
          command: clippy
          args: --features=server --bins -- -D warnings

  clippy_client:
    name: Clippy client
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true
      - run: rustup component add clippy
      - run: sudo apt install -y libxrandr-dev libasound2-dev
      - uses: actions-rs/cargo@v1
        with:
          command: clippy
          args: --features=client --bins -- -D warnings

  clippy_all:
    name: Clippy all
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true
      - run: rustup component add clippy
      - run: sudo apt install -y libxrandr-dev libasound2-dev
      - uses: actions-rs/cargo@v1
        with:
          command: clippy
          args: --all-features --all-targets -- -D warnings
